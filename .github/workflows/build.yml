name: build

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version: stable
          cache: true
      - run: go mod tidy
      - run: go test -v -failfast -race -coverpkg=./... -covermode=atomic -coverprofile=coverage.out ./...
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
      - if: success() && startsWith(github.ref, 'refs/tags/')
        run: |
          sudo apt-get update
          sudo apt-get -yq --no-install-suggests --no-install-recommends install snapcraft
          snapcraft login --with <(echo "${{ secrets.SNAPCRAFT_LOGIN }}")
      - uses: goreleaser/goreleaser-action@v4
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          distribution: goreleaser-pro
          version: nightly
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
  dependabot:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --squash --auto "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
